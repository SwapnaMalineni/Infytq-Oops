class Apparel:
    counter=100
    def __init__(self,price,item_type):
        Apparel.counter+=1
        self.__item_id=item_type[0]+str(Apparel.counter)
        self.__price=price
        self.__item_type=item_type 
    def calculate_price(self):
        self.__price+=self.__price*0.05
    def get_item_id(self):
        return self.__item_id
    def get_price(self):
        return self.__price
    def get_item_type(self):
        return self.__item_type
    def set_price(self,price):
        self.__price=price
class Cotton(Apparel):
    def __init__(self,price,discount):
        super().__init__(price,"Cotton")
        self.__discount=discount   
    def calculate_price(self):
        super().calculate_price()
        price=self.get_price()
        price-=price*(self.__discount/100)
        price+=price*0.05
        self.set_price(price) 
    def get_discount(self):
        return self.__discount
class Silk(Apparel):
    def __init__(self,price):
        super().__init__(price,"Silk")
        self.__points=None
    def calculate_price(self):
        super().calculate_price()
        if self.get_price()>10000:
            self.__points=10 
        else:
            self.__points=3 
        self.set_price(self.get_price()+(self.get_price()*0.1))
    def get_points(self):
        return self.__points
class FruitInfo:
    fruit_name_list=["Apple",'Guava','Orange','Grape','Sweet Lime'] 
    fruit_price_list=[200,80,70,110,60]
    @staticmethod
    def get_fruit_price(fruit_name):
        for i in range(len(FruitInfo.fruit_name_list)):
            if FruitInfo.fruit_name_list[i]==fruit_name:
                return FruitInfo.fruit_price_list[i]
        return -1
    @staticmethod
    def get_fruit_name_list(self):
        return FruitInfo.fruit_name_list
    @staticmethod
    def get_fruit_price_list(self):
        return FruitInfo.fruit_price_list
class Customer:
    def __init__(self,customer_name,cust_type):
        self.__customer_name=customer_name
        self.__cust_type=cust_type
    def get_customer_name(self):
        return self.__customer_name
    def get_cust_type(self):
        return self.__cust_type
class Purchase(Customer):
    counter=101
    def __init__(self,customer,fruit_name,quantity):
        super().__init__()
        self.__customer=customer
        self.__fruit_name=fruit_name
        self.__quantity=quantity
        self.__purchase_id="P"+str(Purchase.counter)
        Purchase.counter+=1
    def get_purchase_id(self):
        Purchase.counter+=1
        return Purchase.counter
    def get_customer(self):
        return self.__customer
    def get_quantity(self):
        return self.__quantity
    def calculate_price(self):
        fruit_price=FruitInfo.get_fruit_price(self.__fruit_name)
        if fruit_price==1:
            return -1
        total_price=fruit_price*self.__quantity
        max_price=max(FruitInfo.fruit_price_list)
        min_price=min(FruitInfo.fruit_price_list)
        if fruit_price==max_price and self.__quantity>1:
            total_price*=0.98
        if fruit_price==min_price and self.__quantity>=5:
            total_price*=0.95
        if super().get_customer_type=="Wholesale":
            total_price*=0.9
        return total_price
            
