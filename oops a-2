class Flower:
    def __init__(self):
        self.__flower_name=None
        self.__price_per_kg=None
        self.__stock_available=None
    def set_flower_name(self,flower_name):
        self.__flower_name=flower_name.lower()
        
    def set_price_per_kg(self,price_per_kg):
        self.__price_per_kg=price_per_kg
        
    def set_stock_available(self,stock_available):
        self.__stock_available=stock_available
        
    def get_flower_name(self):
        return self.__flower_name
        
    def get_price_per_kg(self):
        return self.__price_per_kg
        
    def get_stock_available(self):
        return self.__stock_available
    
    def validate_flower(self):
        if self.__flower_name in ["orchid","rose","jasmine"]:
            return True
        return False
        
    def validate_stock(self,required_quantity):
        if required_quantity<=self.__stock_available:
            return True
        return False
        
    def sell_flower(self,required_quantity):
        if self.validate_flower() and self.validate_stock(required_quantity):
            self.__stock_available-=required_quantity
    def check_level(self):
        if (self.__flower_name=="orchid" and self.__stock_available<15) or (self.__flower_name=="rose" and self.__stock_available<25) or (self.__flower_name=="jasmine" and self.__stock_available<40):
            return True
        return False
f=Flower()
f.set_flower_name("Jasmine")
f.set_stock_available(45)
print(f.check_level())

class Bill:
    def __init__(self,bill_id,patient_name):
        self.__bill_id = bill_id
        self.__patient_name = patient_name 
        self.__bill_amount = None
    
    def calculate_bill_amount(self,consultation_fees, quantity_list, price_list):
        self.__bill_amount=consultation_fees
        for i in range(len(quantity_list)):
            self.__bill_amount+=(quantity_list[i]*price_list[i])
    def get_bill_id(self):
        return self.__bill_id
    def get_bill_amount(self):
        return self.__bill_amount
    def get_patient_name(self):
        return self.__patient_name
    
b=Bill(100,"swapna")
print(b.calculate_bill_amount(1000,[1,3,6,2],[30,45,150,25]))
print(b.get_patient_name())
print(b.get_bill_amount())
print(b.get_bill_id)
